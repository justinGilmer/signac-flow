# This is a sample build configuration for Python.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Dockerhub as your build environment.
image: continuumio/miniconda3

pipelines:
  default:
    - step:
        name: 'build and test'
        script:
          - conda update --yes -n base conda
          - conda --version
          - python --version
          - conda install --yes flake8
          - python -m flake8 --show-source flow/
          - conda config --add channels glotzer
          - conda config --add channels conda-forge
          - conda create -n py27 --yes python=2.7 coverage signac enum34 jinja2 cloudpickle
          - source activate py27
          - python setup.py build
          - python -m coverage run -m unittest discover tests/
          - source deactivate
          - conda create -n py36 --yes python=3.6 coverage signac jinja2 cloudpickle
          - source activate py36
          - python setup.py build
          - python -m coverage run -m unittest discover tests/
          - source deactivate
          - conda create -n py35 --yes python=3.5 coverage signac jinja2 cloudpickle
          - source activate py35
          - python setup.py build
          - python -m coverage run -m unittest discover tests/
          - python -m coverage report
  branches:
    master:
      - step:
          name: 'build and test'
          script:
            - conda update --yes -n base conda
            - conda --version
            - python --version
            - conda install --yes flake8
            - python -m flake8 --show-source flow/
            - conda config --add channels glotzer
            - conda config --add channels conda-forge
            - conda create -n py27 --yes python=2.7 coverage signac enum34 jinja2 cloudpickle
            - source activate py27
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py36 --yes python=3.6 coverage signac jinja2 cloudpickle
            - source activate py36
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py35 --yes python=3.5 coverage signac jinja2 cloudpickle
            - source activate py35
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - python -m coverage report
    develop:
      - step:
          name: 'build and test'
          script:
            - conda update --yes -n base conda
            - conda --version
            - python --version
            - conda install --yes flake8
            - python -m flake8 --show-source flow/
            - conda config --add channels glotzer
            - conda config --add channels conda-forge
            - conda create -n py27 --yes python=2.7 coverage signac enum34 jinja2 cloudpickle
            - source activate py27
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py36 --yes python=3.6 coverage signac jinja2 cloudpickle
            - source activate py36
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py35 --yes python=3.5 coverage signac jinja2 cloudpickle
            - source activate py35
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - python -m coverage report
    release/*:
      - step:
          name: 'build and test'
          script:
            - conda update --yes -n base conda
            - conda --version
            - python --version
            - conda config --add channels glotzer
            - conda config --add channels conda-forge
            - conda create -n py27 --yes python=2.7 coverage signac enum34 jinja2 cloudpickle
            - source activate py27
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py36 --yes python=3.6 coverage signac jinja2 cloudpickle
            - source activate py36
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py35 --yes python=3.5 coverage signac jinja2 cloudpickle
            - source activate py35
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - python -m coverage report
          name: 'deploy-test.pypi.org'
          image: python:3.6
          deployment: test
          script:
            - python --version
            - python -m pip --version
            - python -m pip install -U twine wheel setuptools
            - python -m twine --version
            - python -m wheel version
            - python -c "import json; json.load(open('.zenodo.json'))"
            - bash .test-deploy.bash
  tags:
    v*:
      - step:
          name: 'build and test'
          script:
            - conda update --yes -n base conda
            - conda --version
            - python --version
            - conda install --yes flake8
            - python -m flake8 --show-source flow/
            - conda config --add channels glotzer
            - conda config --add channels conda-forge
            - conda create -n py27 --yes python=2.7 coverage signac enum34 jinja2 cloudpickle
            - source activate py27
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py36 --yes python=3.6 coverage signac jinja2 cloudpickle
            - source activate py36
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - source deactivate
            - conda create -n py35 --yes python=3.5 coverage signac jinja2 cloudpickle
            - source activate py35
            - python setup.py build
            - python -m coverage run -m unittest discover tests/
            - python -m coverage report
      - step:
          name: 'deploy-pypi.org'
          image: python:3.6
          deployment: production
          script:
            - python --version
            - python -m pip --version
            - python -m pip install -U twine wheel setuptools
            - python -m twine --version
            - python -m wheel version
            - python -c "import json; json.load(open('.zenodo.json'))"
            - bash .deploy.bash
